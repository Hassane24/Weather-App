(()=>{"use strict";async function t(t){const e=await async function(t){return fetch(t,{mode:"cors"})}(t);return e.json()}(()=>{const e=document.querySelector("#searchBar"),n=document.querySelector("#startSearch"),o=document.querySelector("#temp"),a=document.querySelector("#location"),r=document.querySelector("#date"),c=document.querySelector("#weather-icon"),u=document.querySelector("#weather-state"),s=document.querySelectorAll("[data-state]"),d=document.querySelector("#wind"),i=document.querySelector("#humidity"),g=document.querySelector("#clouds");function h(t){a.textContent=t.name,o.textContent=`${t.main.temp}Â°C`,u.textContent=t.weather[0].main,g.textContent=`${t.clouds.all}%`,i.textContent=`${t.main.humidity}%`,d.textContent=Math.round(3.6*t.wind.speed*100)/100+"km/h","Clear"==u.textContent&&(c.src="images/sun.svg"),"Thunderstorm"==u.textContent&&(c.src="images/lightning.svg"),"Snow"==u.textContent&&(c.src="images/snow.svg"),"Clouds"==u.textContent&&(c.src="images/cloudy.svg"),"Rain"==u.textContent&&(c.src="images/rainy.svg")}function m(t){let e="",n="",o="",a="",c="",u="";const s=new Date,d=s.getTimezoneOffset();s.setMinutes(s.getMinutes()+d+t.timezone/60),e=s.getFullYear(),o=s.getDate(),c=s.getHours(),u=s.getMinutes(),0==s.getMonth()&&(n="Jan"),1==s.getMonth()&&(n="Feb"),2==s.getMonth()&&(n="Mar"),3==s.getMonth()&&(n="Apr"),4==s.getMonth()&&(n="May"),5==s.getMonth()&&(n="June"),6==s.getMonth()&&(n="July"),7==s.getMonth()&&(n="Aug"),8==s.getMonth()&&(n="Sep"),9==s.getMonth()&&(n="Oct"),10==s.getMonth()&&(n="Nov"),11==s.getMonth()&&(n="Dec"),0==s.getDay()&&(a="Sunday"),1==s.getDay()&&(a="Monday"),2==s.getDay()&&(a="Tuesday"),3==s.getDay()&&(a="Wednesday"),4==s.getDay()&&(a="Thursday"),5==s.getDay()&&(a="Friday"),6==s.getDay()&&(a="Saturday"),r.textContent=`${c}:${u} - ${a}, ${o} ${n} ${e}`}s.forEach((e=>{e.addEventListener("click",(e=>{t(`https://api.openweathermap.org/data/2.5/weather?q=${e.target.innerText}&APPID=512dd7c72356c3b72f04ac7af77e9f8a&units=metric`).then((t=>{h(t),m(t)}))}))})),n.addEventListener("click",(()=>{t(`https://api.openweathermap.org/data/2.5/weather?q=${e.value}&APPID=512dd7c72356c3b72f04ac7af77e9f8a&units=metric`).then((t=>"400"===t.cod||"404"===t.cod?alert(t.message):(h(t),m(t),void(e.value=""))),(t=>{console.log(t)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFpQixTQUFVQyxJQUMvQnJELEVBQ0UscURBQXFEcUQsRUFBRUMsT0FBT0MsaUVBQzlEQyxNQUFNQyxJQUNOcEMsRUFBWW9DLEdBQ1oxQixFQUFZMEIsWUFLbEIvQyxFQUFhMEMsaUJBQWlCLFNBQVMsS0FDckNwRCxFQUNFLHFEQUFxRE8sRUFBVW1ELDZEQUMvREYsTUFDQ0MsR0FDaUIsUUFBWkEsRUFBSUUsS0FDUSxRQUFaRixFQUFJRSxJQURzQkMsTUFBTUgsRUFBSUksVUFFeEN4QyxFQUFZb0MsR0FDWjFCLEVBQVkwQixRQUNabEQsRUFBVW1ELE1BQVEsT0FFbkJJLElBQ0NDLFFBQVFDLElBQUlGLFVBcENULEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9Nb2R1bGVzL2ZldGNoLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL01vZHVsZXMvVUkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKHVybCkge1xuICBjb25zdCByZXNwb25zZSA9IGZldGNoKHVybCwgeyBtb2RlOiBcImNvcnNcIiB9KTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG5hc3luYyBmdW5jdGlvbiBuZWVkZWREYXRhKHVybCkge1xuICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2hEYXRhKHVybCwgeyBtb2RlOiBcImNvcnNcIiB9KTtcbiAgcmV0dXJuIGRhdGEuanNvbigpO1xufVxuXG5leHBvcnQgeyBuZWVkZWREYXRhIH07XG4iLCJpbXBvcnQgeyBuZWVkZWREYXRhIH0gZnJvbSBcIi4vZmV0Y2hcIjtcblxuY29uc3QgVUkgPSAoKCkgPT4ge1xuICBjb25zdCBzZWFyY2hCYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NlYXJjaEJhclwiKTtcbiAgY29uc3Qgc2VhcmNoQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzdGFydFNlYXJjaFwiKTtcbiAgY29uc3QgdGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGVtcFwiKTtcbiAgY29uc3QgbG9jYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xvY2F0aW9uXCIpO1xuICBjb25zdCBkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYXRlXCIpO1xuICBjb25zdCB3ZWF0aGVySWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd2VhdGhlci1pY29uXCIpO1xuICBjb25zdCB3ZWF0aGVyU3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dlYXRoZXItc3RhdGVcIik7XG4gIGNvbnN0IHN0YXRlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1zdGF0ZV1cIik7XG4gIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dpbmRcIik7XG4gIGNvbnN0IGh1bWlkaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNodW1pZGl0eVwiKTtcbiAgY29uc3QgY2xvdWRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjbG91ZHNcIik7XG5cbiAgc3RhdGVzLmZvckVhY2goKHN0YXRlKSA9PiB7XG4gICAgc3RhdGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICBuZWVkZWREYXRhKFxuICAgICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2UudGFyZ2V0LmlubmVyVGV4dH0mQVBQSUQ9NTEyZGQ3YzcyMzU2YzNiNzJmMDRhYzdhZjc3ZTlmOGEmdW5pdHM9bWV0cmljYFxuICAgICAgKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGlzcGxheURhdGEocmVzKTtcbiAgICAgICAgZ2V0VGltZVpvbmUocmVzKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcblxuICBzZWFyY2hCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBuZWVkZWREYXRhKFxuICAgICAgYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtzZWFyY2hCYXIudmFsdWV9JkFQUElEPTUxMmRkN2M3MjM1NmMzYjcyZjA0YWM3YWY3N2U5ZjhhJnVuaXRzPW1ldHJpY2BcbiAgICApLnRoZW4oXG4gICAgICAocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMuY29kID09PSBcIjQwMFwiKSByZXR1cm4gYWxlcnQocmVzLm1lc3NhZ2UpO1xuICAgICAgICBpZiAocmVzLmNvZCA9PT0gXCI0MDRcIikgcmV0dXJuIGFsZXJ0KHJlcy5tZXNzYWdlKTtcbiAgICAgICAgZGlzcGxheURhdGEocmVzKTtcbiAgICAgICAgZ2V0VGltZVpvbmUocmVzKTtcbiAgICAgICAgc2VhcmNoQmFyLnZhbHVlID0gXCJcIjtcbiAgICAgIH0sXG4gICAgICAoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9XG4gICAgKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gZGlzcGxheURhdGEoZGF0YSkge1xuICAgIGxvY2F0aW9uLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHRlbXAudGV4dENvbnRlbnQgPSBgJHtkYXRhLm1haW4udGVtcH3CsENgO1xuICAgIHdlYXRoZXJTdGF0ZS50ZXh0Q29udGVudCA9IGRhdGEud2VhdGhlclswXS5tYWluO1xuICAgIGNsb3Vkcy50ZXh0Q29udGVudCA9IGAke2RhdGEuY2xvdWRzLmFsbH0lYDtcbiAgICBodW1pZGl0eS50ZXh0Q29udGVudCA9IGAke2RhdGEubWFpbi5odW1pZGl0eX0lYDtcbiAgICB3aW5kLnRleHRDb250ZW50ID0gYCR7TWF0aC5yb3VuZChkYXRhLndpbmQuc3BlZWQgKiAzLjYgKiAxMDApIC8gMTAwfWttL2hgO1xuICAgIGlmICh3ZWF0aGVyU3RhdGUudGV4dENvbnRlbnQgPT0gXCJDbGVhclwiKSB3ZWF0aGVySWNvbi5zcmMgPSBcImltYWdlcy9zdW4uc3ZnXCI7XG4gICAgaWYgKHdlYXRoZXJTdGF0ZS50ZXh0Q29udGVudCA9PSBcIlRodW5kZXJzdG9ybVwiKVxuICAgICAgd2VhdGhlckljb24uc3JjID0gXCJpbWFnZXMvbGlnaHRuaW5nLnN2Z1wiO1xuICAgIGlmICh3ZWF0aGVyU3RhdGUudGV4dENvbnRlbnQgPT0gXCJTbm93XCIpIHdlYXRoZXJJY29uLnNyYyA9IFwiaW1hZ2VzL3Nub3cuc3ZnXCI7XG4gICAgaWYgKHdlYXRoZXJTdGF0ZS50ZXh0Q29udGVudCA9PSBcIkNsb3Vkc1wiKVxuICAgICAgd2VhdGhlckljb24uc3JjID0gXCJpbWFnZXMvY2xvdWR5LnN2Z1wiO1xuICAgIGlmICh3ZWF0aGVyU3RhdGUudGV4dENvbnRlbnQgPT0gXCJSYWluXCIpXG4gICAgICB3ZWF0aGVySWNvbi5zcmMgPSBcImltYWdlcy9yYWlueS5zdmdcIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFRpbWVab25lKGRhdGEpIHtcbiAgICBsZXQgWUVBUiA9IFwiXCI7XG4gICAgbGV0IE1PTlRIID0gXCJcIjtcbiAgICBsZXQgREFZTU9OVEggPSBcIlwiO1xuICAgIGxldCBEQVkgPSBcIlwiO1xuICAgIGxldCBIT1VSID0gXCJcIjtcbiAgICBsZXQgTUlOVVRFUyA9IFwiXCI7XG4gICAgY29uc3QgZGF0ZXkgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IG9mZnNldCA9IGRhdGV5LmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgZGF0ZXkuc2V0TWludXRlcyhkYXRleS5nZXRNaW51dGVzKCkgKyBvZmZzZXQgKyBkYXRhLnRpbWV6b25lIC8gNjApO1xuICAgIFlFQVIgPSBkYXRleS5nZXRGdWxsWWVhcigpO1xuICAgIERBWU1PTlRIID0gZGF0ZXkuZ2V0RGF0ZSgpO1xuICAgIEhPVVIgPSBkYXRleS5nZXRIb3VycygpO1xuICAgIE1JTlVURVMgPSBkYXRleS5nZXRNaW51dGVzKCk7XG4gICAgaWYgKGRhdGV5LmdldE1vbnRoKCkgPT0gMCkgTU9OVEggPSBcIkphblwiO1xuICAgIGlmIChkYXRleS5nZXRNb250aCgpID09IDEpIE1PTlRIID0gXCJGZWJcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0TW9udGgoKSA9PSAyKSBNT05USCA9IFwiTWFyXCI7XG4gICAgaWYgKGRhdGV5LmdldE1vbnRoKCkgPT0gMykgTU9OVEggPSBcIkFwclwiO1xuICAgIGlmIChkYXRleS5nZXRNb250aCgpID09IDQpIE1PTlRIID0gXCJNYXlcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0TW9udGgoKSA9PSA1KSBNT05USCA9IFwiSnVuZVwiO1xuICAgIGlmIChkYXRleS5nZXRNb250aCgpID09IDYpIE1PTlRIID0gXCJKdWx5XCI7XG4gICAgaWYgKGRhdGV5LmdldE1vbnRoKCkgPT0gNykgTU9OVEggPSBcIkF1Z1wiO1xuICAgIGlmIChkYXRleS5nZXRNb250aCgpID09IDgpIE1PTlRIID0gXCJTZXBcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0TW9udGgoKSA9PSA5KSBNT05USCA9IFwiT2N0XCI7XG4gICAgaWYgKGRhdGV5LmdldE1vbnRoKCkgPT0gMTApIE1PTlRIID0gXCJOb3ZcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0TW9udGgoKSA9PSAxMSkgTU9OVEggPSBcIkRlY1wiO1xuICAgIGlmIChkYXRleS5nZXREYXkoKSA9PSAwKSBEQVkgPSBcIlN1bmRheVwiO1xuICAgIGlmIChkYXRleS5nZXREYXkoKSA9PSAxKSBEQVkgPSBcIk1vbmRheVwiO1xuICAgIGlmIChkYXRleS5nZXREYXkoKSA9PSAyKSBEQVkgPSBcIlR1ZXNkYXlcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0RGF5KCkgPT0gMykgREFZID0gXCJXZWRuZXNkYXlcIjtcbiAgICBpZiAoZGF0ZXkuZ2V0RGF5KCkgPT0gNCkgREFZID0gXCJUaHVyc2RheVwiO1xuICAgIGlmIChkYXRleS5nZXREYXkoKSA9PSA1KSBEQVkgPSBcIkZyaWRheVwiO1xuICAgIGlmIChkYXRleS5nZXREYXkoKSA9PSA2KSBEQVkgPSBcIlNhdHVyZGF5XCI7XG4gICAgZGF0ZS50ZXh0Q29udGVudCA9IGAke0hPVVJ9OiR7TUlOVVRFU30gLSAke0RBWX0sICR7REFZTU9OVEh9ICR7TU9OVEh9ICR7WUVBUn1gO1xuICB9XG59KSgpO1xuXG5leHBvcnQgeyBVSSB9O1xuIl0sIm5hbWVzIjpbImFzeW5jIiwibmVlZGVkRGF0YSIsInVybCIsImRhdGEiLCJmZXRjaCIsIm1vZGUiLCJmZXRjaERhdGEiLCJqc29uIiwic2VhcmNoQmFyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoQnV0dG9uIiwidGVtcCIsImxvY2F0aW9uIiwiZGF0ZSIsIndlYXRoZXJJY29uIiwid2VhdGhlclN0YXRlIiwic3RhdGVzIiwicXVlcnlTZWxlY3RvckFsbCIsIndpbmQiLCJodW1pZGl0eSIsImNsb3VkcyIsImRpc3BsYXlEYXRhIiwidGV4dENvbnRlbnQiLCJuYW1lIiwibWFpbiIsIndlYXRoZXIiLCJhbGwiLCJNYXRoIiwicm91bmQiLCJzcGVlZCIsInNyYyIsImdldFRpbWVab25lIiwiWUVBUiIsIk1PTlRIIiwiREFZTU9OVEgiLCJEQVkiLCJIT1VSIiwiTUlOVVRFUyIsImRhdGV5IiwiRGF0ZSIsIm9mZnNldCIsImdldFRpbWV6b25lT2Zmc2V0Iiwic2V0TWludXRlcyIsImdldE1pbnV0ZXMiLCJ0aW1lem9uZSIsImdldEZ1bGxZZWFyIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TW9udGgiLCJnZXREYXkiLCJmb3JFYWNoIiwic3RhdGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInRhcmdldCIsImlubmVyVGV4dCIsInRoZW4iLCJyZXMiLCJ2YWx1ZSIsImNvZCIsImFsZXJ0IiwibWVzc2FnZSIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9